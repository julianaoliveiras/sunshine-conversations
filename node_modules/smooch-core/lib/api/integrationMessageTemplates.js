'use strict';

exports.__esModule = true;
exports.IntegrationMessageTemplatesApi = undefined;

var _base = require('./base');

var _smoochMethod = require('../utils/smoochMethod');

var _smoochMethod2 = _interopRequireDefault(_smoochMethod);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @constructor
 * @name IntegrationMessageTemplatesApi
 * @extends BaseApi
 */
var IntegrationMessageTemplatesApi = exports.IntegrationMessageTemplatesApi = function (_BaseApi) {
    _inherits(IntegrationMessageTemplatesApi, _BaseApi);

    function IntegrationMessageTemplatesApi() {
        _classCallCheck(this, IntegrationMessageTemplatesApi);

        return _possibleConstructorReturn(this, _BaseApi.apply(this, arguments));
    }

    return IntegrationMessageTemplatesApi;
}(_base.BaseApi);

Object.assign(IntegrationMessageTemplatesApi.prototype, {
    /**
     * Create a WhatsApp Message Template for an integration
     * @memberof IntegrationMessageTemplatesApi.prototype
     * @method create
     * @return {APIResponse}
     */
    create: (0, _smoochMethod2.default)({
        params: ['integrationId', 'messageTemplate'],
        path: '/integrations/:integrationId/messageTemplates',
        func: function func(url, integrationId, messageTemplate) {
            return this.request('POST', url, messageTemplate);
        }
    }),

    /**
     * List WhatsApp Message Templates for an integration
     * @memberof IntegrationMessageTemplatesApi.prototype
     * @method list
     * @return {APIResponse}
     */
    list: (0, _smoochMethod2.default)({
        params: ['integrationId', 'query'],
        path: '/integrations/:integrationId/messageTemplates',
        optional: ['query'],
        func: function func(url, integrationId, query) {
            return this.request('GET', url, query);
        }
    }),

    /**
     * Delete a WhatsApp Message Template for an integration by name
     * @memberof IntegrationMessageTemplatesApi.prototype
     * @method delete
     * @return {APIResponse}
     */
    delete: (0, _smoochMethod2.default)({
        params: ['integrationId', 'messageTemplateName'],
        path: '/integrations/:integrationId/messageTemplates/:messageTemplateName',
        method: 'DELETE'
    })
});